user www-data;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log notice;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;

    server {
        listen 127.0.0.1:8443 ssl;

        ssl_certificate           /etc/letsencrypt/live/www.example.com/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/www.example.com/privkey.pem;
        ssl_protocols             TLSv1.3;
        ssl_ciphers               AEAD-AES128-GCM-SHA256:AEAD-AES256-GCM-SHA384:AEAD-CHACHA20-POLY1305-SHA256,ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        client_max_body_size 1M;

        location / {
            proxy_pass http://127.0.0.1:8080;
        }
    }

    server {
        listen 127.0.0.1:9443 ssl;

        ssl_certificate           /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/example.com/privkey.pem;
        ssl_protocols             TLSv1.3;
        ssl_ciphers               AEAD-AES128-GCM-SHA256:AEAD-AES256-GCM-SHA384:AEAD-CHACHA20-POLY1305-SHA256,ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        client_max_body_size 1M;

        return 301 https://www.example.com$request_uri;
    }
}

stream {
    map $ssl_preread_server_name $selected_upstream {
        default         127.0.0.1:8443;
        www.example.com 127.0.0.1:8443;
        example.com     127.0.0.1:9443;
    }

    server {
        listen     {{ .openssh.port }};
        proxy_pass 127.0.0.1:22;
    }

    server {
        ssl_preread on;
        listen      443;
        proxy_pass  $selected_upstream;
    }
}
